type Score {
  slot: String!,
  score: Int
}

type ActiveGame {
  id: ID!,
  pending: Boolean,
  players: [String!]!,
  playerInTurn: Int!,
  roll: [Int!]!,
  rolls_left: Int!,
  scores: [[Score!]!]!
}

type PendingGame {
  id: ID!,
  pending: Boolean,
  creator: String!,
  players: [String!]!,
  number_of_players: Int!
}

union Game = ActiveGame | PendingGame

type Query {
  games: [ActiveGame!]!
}

type Mutation {
  new_game(creator: String!, number_of_players: Int!): Game!
}

type Subscription {
  active: ActiveGame
}
